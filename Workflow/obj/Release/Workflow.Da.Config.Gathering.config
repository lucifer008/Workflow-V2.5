<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="Gathering" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<resultMap id="SelectPaymentResult" class="Gathering">
			<result property="Amount" column="AMOUNT"/>
			<result property="OrderNo" column="no"/>
			<result property="UserName" column="user_name"/>
			<result property="GatheringDateTime" column="gathering_Date_Time"/>
			<result property="PayKind" column="pay_kind"/>
			<result property="Memo" column="memo"/>
		</resultMap>
		<!--取得结款笔数/结款金额(收银交班)-->
		<resultMap id="SelectPayForAmountResult" class="CashHandOver">
			<result property="PayForCount" column="PAY_FOR_COUNT" dbType="int"/>
			<result property="PayForAmountSum" column="PAY_FOR_AMOUNT_SUM" dbType="decimal"/>
			<result property="MembercardDiffAmount" column="membercardDiffAmount"/>
		</resultMap>
	</resultMaps>
	<statements>
		<select id="SelectCustomerPayment" resultMap="SelectPaymentResult" parameterClass="Order">
			<![CDATA[
			with temptbl as (SELECT ROW_NUMBER() OVER (ORDER BY a.id desc)AS Row,
			a.amount, 
			a.gathering_Date_Time,
			e.name as user_name,
			b.pay_kind,
			c.no,
			c.memo
			from gathering a
			inner join gathering_Orders b on a.id=b.gathering_id
			inner join orders c on b.orders_id=c.id
			inner join users d on c.cash_user_id=d.id
			inner join employee e on e.id=d.employee_id
			where c.Deleted='0' and b.PAY_KIND<>#PayKind# and c.status <> #Status#
			and c.company_Id=#CompanyId# and c.Branch_Shop_Id=#BranchShopId#
			]]>
			<dynamic>
				<isNotNull prepend="and" property="BalanceDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)>=convert(nvarchar(10),#BalanceDateTimeString#,120)
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="InsertDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)<convert(nvarchar(10),#InsertDateTimeString#,120)
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="CustomerName">
					<![CDATA[
				c.customer_name=#CustomerName#
				]]>
				</isNotNull>
			</dynamic>
			)
			SELECT * FROM temptbl where Row between #BeginRow# and #EndRow#;
		</select>

		<select id="SelectCustomerPaymentAmount" resultClass="decimal" parameterClass="Order">
			<![CDATA[
				select isnull(sum(a.amount),0)
				from gathering a
				inner join gathering_Orders b on a.id=b.gathering_id
				inner join orders c on b.orders_id=c.id
				inner join users d on c.cash_user_id=d.id
				inner join employee e on e.id=d.employee_id
				where c.Deleted='0' and b.PAY_KIND<>#PayKind# and c.status <> #Status#
				and c.company_Id=#CompanyId# and c.Branch_Shop_Id=#BranchShopId#
			]]>
			<dynamic>
				<isNotNull prepend="and" property="BalanceDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)>=convert(nvarchar(10),#BalanceDateTimeString#,120)
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="InsertDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)<convert(nvarchar(10),#InsertDateTimeString#,120)	
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="CustomerName">
					<![CDATA[
				c.customer_name=#CustomerName#
				]]>
				</isNotNull>
			</dynamic>
		</select>

		<select id="SelectCustomerPaymentCount" resultClass="int" parameterClass="Order">
			<![CDATA[
			select count(a.id)
			from gathering a
			inner join gathering_Orders b on a.id=b.gathering_id
			inner join orders c on b.orders_id=c.id
			inner join users d on c.cash_user_id=d.id
			inner join employee e on e.id=d.employee_id
			where c.Deleted='0' and b.PAY_KIND<>#PayKind# and c.status <> #Status#
			and c.company_Id=#CompanyId# and c.Branch_Shop_Id=#BranchShopId#
			]]>
			<dynamic>
				<isNotNull prepend="and" property="BalanceDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)>=convert(nvarchar(10),#BalanceDateTimeString#,120)
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="InsertDateTimeString">
					<![CDATA[
				convert(nvarchar(10),a.gathering_date_time,120)<convert(nvarchar(10),#InsertDateTimeString#,120)	
				]]>
				</isNotNull>
				<isNotNull prepend="and" property="CustomerName">
					<![CDATA[
				c.customer_name=#CustomerName#
				]]>
				</isNotNull>
			</dynamic>
		</select>
    <!--
		功能概要: 收银交班(结算现金与会员卡充值金额)
		修正履历: 张晓林
		修正时间: 2010年1月14日15:14:26
		修正描述: 将结算款与会员卡冲减金额分开
	-->
	<select id="SelectPayForAmount" parameterClass="map" resultMap="Gathering.SelectPayForAmountResult">
		select
		z.*,
		(
		select isnull(sum(AMOUNT),0)
		from GATHERING a
		Inner join Gathering_Orders b on a.Id=b.Gathering_Id
		where a.DELETED='0'
		And a.Gathering_Date_Time between #StartTime# and #EndTime#
		And a.Insert_User=#UserId#
		And a.Company_Id=#CompanyId#
		And a.Branch_Shop_Id=#BranchShopId#
		and (b.pay_kind=#PayTypeMemberCardDiff#)
		) membercardDiffAmount
		from(
		select isnull(sum(AMOUNT),0) as PAY_FOR_AMOUNT_SUM,
		count(*) as PAY_FOR_COUNT
		from GATHERING a
		Inner join Gathering_Orders b on a.Id=b.Gathering_Id
		where a.DELETED='0'
		And a.Gathering_Date_Time between #StartTime# and #EndTime#
		And a.Insert_User=#UserId#
		And a.Company_Id=#CompanyId#
		And a.Branch_Shop_Id=#BranchShopId#
		and (b.pay_kind=#PayTypeBalance# or b.pay_kind=#PayTypePreDiff# or b.pay_kind=#PreDeposits# or b.pay_kind=#AccountPreDepositsDiff# or b.pay_kind=#PayTypeOwe# or b.pay_kind=#PayTypeOrderDiff#)<!--or b.pay_kind=#PayTypePreDiff# or b.pay_kind=#PayTypeOwe#付款类型为:结算款+预付款冲减+已经收了应收款-->
		)z
		
	</select>
     <!--
	 功能: 交班(统计税费)
	 作者: 张晓林
	 日期: 2009年12月21日12:02:58
	 -->
	<select id="GetDailyScotAmount" parameterClass="map">
		select
		isNull(sum(isNull(amount,0)),0)
		from OTHER_GATHERING_AND_REFUNDMENT_RECORD
		where deleted='0'
		and company_Id=#CompanyId#
		and branch_shop_Id=#BranchShopId#
		and Insert_Date_Time>=#StartTime#
		<![CDATA[and Insert_Date_Time<=#EndTime#]]>
		and (pay_kind=#scotBalance# or pay_kind=#scotAccount#)
		AND Insert_User=#UserId# and pay_Kind!=#InvliDate#
	</select>
	<!--
	功能: 交班统计(统计会员卡充值金额)
	作者: 张晓林
	时间: 2010年1月14日15:37:38
	-->
	<select id="GetCurrentHandOverMemChargeAmount" paramterClass="map">
		select
		isNull(sum(isNull(amount,0)),0)
		from OTHER_GATHERING_AND_REFUNDMENT_RECORD
		where deleted='0'
		and company_Id=#CompanyId#
		and branch_shop_Id=#BranchShopId#
		and Insert_Date_Time>=#StartTime#
		<![CDATA[and Insert_Date_Time<=#EndTime#]]>
		and (pay_kind=#ptChargeAmount1# or pay_kind=#ptChargeAmount2#)
		AND Insert_User=#UserId#
	</select>
	<select id="SelectGatheringByOrderId" parameterClass="Gathering" resultMap="GatheringResultMap.selectResult">
		<![CDATA[
			select * from gathering a inner join gathering_orders b on b.gathering_id=a.id
			where b.orders_id=#Id# and a.company_id=#CompanyId# and a.branch_shop_id=#BranchShopId#
		]]>
	</select>
	<delete id="DeleteGatheringOrderInfo" parameterClass="Gathering">
		Delete gathering_orders where Orders_Id=#Id# and Pay_kind!=#InsertUser#
	</delete>
	<delete id="DeleteGatheringInfo" parameterClass="Gathering">
		Delete Gathering
		where Id in(select gathering_Id from Gathering_orders where orders_Id=#Id# and pay_kind!=#InsertUser#)
		and company_Id=#CompanyId#
		and branch_shop_id=#BranchShopId#
	</delete>
	<delete id="DeleteGatheringPaymentConcessionInfo" parameterClass="Gathering">
		Delete Payment_Concession
		where gathering_Id in(select gathering_Id from Gathering_orders where orders_Id=#Id# and pay_kind!=#InsertUser#)
		and company_Id=#CompanyId#
		and branch_shop_id=#BranchShopId#
	</delete>
	</statements>
</sqlMap>