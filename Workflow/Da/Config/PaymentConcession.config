<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="PaymentConcession" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<resultMap id="SearchConcessionMap" class="Gathering">
		  <result property="Id" column="orders_Id"/>
		  <result property="OrderNo" column="No"/>
		  <result property="ConcessionAmountTotal" column="ConcessionAmount"/>
		  <result property ="MoreConcessionAmountTotal" column="MoreConcessionAmount"/>
		  <result property ="UserName" column="Customer_Name"/>
		  <result property ="Arrearage" column="Sum_Amount"/>
			<result property ="Memo" column="Member_card_No"/>
		</resultMap>
		<resultMap id="SelectConcessionMap" class="PaymentConcession">
			<result property="ConcessionAmountTotal" column="ConcessionAmount"/>
			<result property ="MoreConcessionAmountTotal" column="MoreConcessionAmount"/>
			<result property="OperateUsers" column="OPERATE_USERS_ID" select="UserBase.SelectByPk" nullValue="0" lazyLoad="true"/>
			<result property="OperateUsersId" column="OPERATE_USERS_ID"/>
		</resultMap>

		<resultMap id="SelectPayConcessionOrderInfo" class="PaymentConcession">
			<result property="OrderCount" column="ORDERCOUNT" dbType="int"/>
			<result property="SumAmountTotal" column="SUMAMOUNTTOTAL" dbType="decimal"/>
			<result property="RealAmountTotal" column="REALAMOUNTTOTAL" dbType="decimal"/>
		</resultMap>
	</resultMaps>
	<statements>
		<select id="SelectAll" resultMap="PaymentConcessionResultMap.selectResult">
			SELECT
				*
			FROM PAYMENT_CONCESSION
			ORDER BY ID ASC
		</select>
		<select id="SelectOrderConcessionByOrderId" parameterClass="long" resultMap="PaymentConcessionResultMap.selectResult">
			<![CDATA[
				select * from PAYMENT_CONCESSION a
				inner join gathering b on a.gathering_id=b.id
				inner join gathering_orders c on c.gathering_id=b.id
				where c.orders_id=#Id# and  a.Deleted='0' and a.Company_Id=#CompanyId#
				and c.pay_kind!=#Memo#
			]]>
			<dynamic>
				<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
					<![CDATA[
					 a.branch_shop_id=#BranchShopId#
					]]>
				</isNotEqual>
			</dynamic>			
		</select>
		<select id="SelectPayConcessionByGatheringId" parameterClass="long" resultMap="PaymentConcessionResultMap.selectResult">
			<![CDATA[
				select * from PAYMENT_CONCESSION where gathering_id=#value#
			]]>
		</select>
    
    <!--优惠查询-->
    <select id="SearchConcession" resultMap="SearchConcessionMap">
	<!--优化后:-->
		select * into ##conAmTem from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) ConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and (concession_Type=#Memo# or concession_Type=#Version# or concession_Type=#UpdateUser# or concession_Type=#InsertUser#)
		group by gathering_Id
		)z
		select * into ##morConAm from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) MoreConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and concession_Type=#ConcessionType#
		group by gathering_Id
		)z

		select * into ##tem from(
		select
		o.No,a.orders_Id,sum(isnull(z.ConcessionAmount,0))ConcessionAmount,
		o.Customer_Name,o.Sum_amount,me.Member_card_No,
		sum(isnull(m.MoreConcessionAmount,0)) MoreConcessionAmount
		from GATHERING_ORDERS a
		<!--优惠合计(抹零+折让+优惠+舍入少收)-->
		left join ##conAmTem z on z.Gathering_Id=a.Gathering_Id
		<!--多收合计(舍入多收)-->
		left join ##morConAm m on m.Gathering_Id=a.Gathering_Id
		Inner join orders o on o.Id=a.orders_Id
		inner join(
			select Id from Gathering where deleted='0'
			<dynamic>
				<isNotNull prepend="And" property="BeiginDateTimeString">
					Gathering_date_Time>=#BeiginDateTimeString#
				</isNotNull>
				<isNotNull prepend="And" property="EndDateTimeString">
					<![CDATA[Gathering_Date_Time<=#EndDateTimeString#]]>
				</isNotNull>
			</dynamic>

		) g on g.Id=a.gathering_Id
		left join member_card me on me.Id=o.Member_card_Id
		where (Pay_Kind=#PayTypeBalance# or pay_Kind=#PayTypePreDiff# or Pay_Kind=#PayTypeMemberCardDiff# or Pay_Kind=#PayTypeOwe# or pay_kind=#PreDepositsDiff# or pay_kind=#AccountPreDepositsDiff#)
		<dynamic>
			<isNotNull prepend="And" property="OrderNo">
				o.No=#OrderNo#
			</isNotNull>
		</dynamic>
		group by orders_Id,No,o.Customer_Name,o.Sum_amount,me.Member_card_No
		having sum(isnull(z.ConcessionAmount,0))>0 or sum(isnull(m.MoreConcessionAmount,0))>0
		)z
		select
		top(#RowCount#) *
		from ##tem
		where orders_Id not in(select top(#RowCount#*#CurrentPageIndex#) orders_Id from ##tem order by orders_Id)
		order by orders_Id

	</select>
    <select id="SearchConcessionRowCount" resultClass="long">
		select * into ##conAmTem from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) ConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and (concession_Type=#Memo# or concession_Type=#Version# or concession_Type=#UpdateUser# or concession_Type=#InsertUser#)
		group by gathering_Id
		)z
		select * into ##morConAm from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) MoreConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and concession_Type=#ConcessionType#
		group by gathering_Id
		)z

		select * into ##tem from(
		select
		o.No,a.orders_Id,sum(isnull(z.ConcessionAmount,0))ConcessionAmount,
		sum(isnull(m.MoreConcessionAmount,0)) MoreConcessionAmount
		from GATHERING_ORDERS a
		<!--优惠合计(抹零+折让+优惠+舍入少收)-->
		left join ##conAmTem z on z.Gathering_Id=a.Gathering_Id
		<!--多收合计(舍入多收)-->
		left join ##morConAm m on m.Gathering_Id=a.Gathering_Id
		Inner join orders o on o.Id=a.orders_Id
		inner join(
		select Id from Gathering where deleted='0'
		<dynamic>
			<isNotNull prepend="And" property="BeiginDateTimeString">
				Gathering_date_Time>=#BeiginDateTimeString#
			</isNotNull>
			<isNotNull prepend="And" property="EndDateTimeString">
				<![CDATA[Gathering_Date_Time<=#EndDateTimeString#]]>
			</isNotNull>
		</dynamic>

		) g on g.Id=a.gathering_Id
		where (Pay_Kind=#PayTypeBalance# or pay_Kind=#PayTypePreDiff# or Pay_Kind=#PayTypeMemberCardDiff# or Pay_Kind=#PayTypeOwe# or pay_kind=#PreDepositsDiff# or pay_kind=#AccountPreDepositsDiff#)
		<dynamic>
			<isNotNull prepend="And" property="OrderNo">
				o.No=#OrderNo#
			</isNotNull>
		</dynamic>
		group by orders_Id,No
		having sum(isnull(z.ConcessionAmount,0))>0 or sum(isnull(m.MoreConcessionAmount,0))>0
		)z
		select
		count(orders_Id)
		from ##tem
	</select>
    <select id="SearchConcessionPrint" resultMap="SearchConcessionMap">
		select * into ##conAmTem from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) ConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and (concession_Type=#Memo# or concession_Type=#Version# or concession_Type=#UpdateUser# or concession_Type=#InsertUser#)
		group by gathering_Id
		)z
		select * into ##morConAm from(
		select
		Gathering_Id,sum(isnull(concession_amount,0)) MoreConcessionAmount
		from PAYMENT_CONCESSION
		where deleted='0'
		and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and concession_Type=#ConcessionType#
		group by gathering_Id
		)z

		select * into ##tem from(
		select
		o.No,a.orders_Id,sum(isnull(z.ConcessionAmount,0))ConcessionAmount,
		o.Customer_Name,o.Sum_amount,me.Member_card_No,
		sum(isnull(m.MoreConcessionAmount,0)) MoreConcessionAmount
		from GATHERING_ORDERS a
		<!--优惠合计(抹零+折让+优惠+舍入少收)-->
		left join ##conAmTem z on z.Gathering_Id=a.Gathering_Id
		<!--多收合计(舍入多收)-->
		left join ##morConAm m on m.Gathering_Id=a.Gathering_Id
		Inner join orders o on o.Id=a.orders_Id
		inner join(
		select Id from Gathering where deleted='0'
		<dynamic>
			<isNotNull prepend="And" property="BeiginDateTimeString">
				Gathering_date_Time>=#BeiginDateTimeString#
			</isNotNull>
			<isNotNull prepend="And" property="EndDateTimeString">
				<![CDATA[Gathering_Date_Time<=#EndDateTimeString#]]>
			</isNotNull>
		</dynamic>
		) g on g.Id=a.gathering_Id
		left join member_card me on me.Id=o.Member_card_Id
		where (Pay_Kind=#PayTypeBalance# or pay_Kind=#PayTypePreDiff# or Pay_Kind=#PayTypeMemberCardDiff# or Pay_Kind=#PayTypeOwe# or pay_kind=#PreDepositsDiff# or pay_kind=#AccountPreDepositsDiff#)
		<dynamic>
			<isNotNull prepend="And" property="OrderNo">
				o.No=#OrderNo#
			</isNotNull>
		</dynamic>
		group by orders_Id,No,o.Customer_Name,o.Sum_amount,me.Member_card_No
		having sum(isnull(z.ConcessionAmount,0))>0 or sum(isnull(m.MoreConcessionAmount,0))>0
		)z
		
		select
		*
		from ##tem order by orders_Id
	</select>
		<!--根据订单号获取前期修正的订单Id-->
		<select id="GetPhophaseOrderId" paramterClass="Order">
			select
			top 1
			Id
			from orders
			where deleted='0'
			and company_Id=#CompanyId#
			and Branch_shop_Id=#BranchShopId#
			and No like #No#
			<!--and (Status=#Status# or Status=#Status1# or Status=#Status2#)-->
			and reception_user=#CustomerId#
			<isNotNull property="StatusList">
				<iterate prepend="and" property="StatusList" open="(" close=")" conjunction=" OR ">
					<![CDATA[
					  Status=#StatusList[]#
					  ]]>
				</iterate>
			</isNotNull>
		</select>

		<!--按操作人统计优惠信息-->
		<select id="SelectPayConcessionListByUserId" parameterClass="map" resultMap="SelectConcessionMap">
			WITH TEMPTBL AS (
			SELECT ROW_NUMBER() OVER (ORDER BY OPERATE_USERS_ID DESC) AS ROW, * FROM
			(
			SELECT
			ISNULL(m.OPERATE_USERS_ID, z.operate_users_id) as OPERATE_USERS_ID,
			ISNULL(MORECONCESSIONAMOUNT,0) AS MORECONCESSIONAMOUNT,
			ISNULL(CONCESSIONAMOUNT,0)  AS CONCESSIONAMOUNT FROM
			(	 <!--多收合计(舍入多收)-->
			SELECT
			OPERATE_USERS_ID,SUM(ISNULL(CONCESSION_AMOUNT,0)) MORECONCESSIONAMOUNT
			FROM PAYMENT_CONCESSION PC
			INNER JOIN GATHERING_ORDERS  GO ON  GO.GATHERING_ID = PC.GATHERING_ID
			WHERE DELETED='0'
			AND COMPANY_ID=#CompanyId#
			AND BRANCH_SHOP_ID=#BaranchShopId#
			AND CONCESSION_TYPE=#ConcessionType5#
		    AND (GO.PAY_KIND=#PayTypeBalance# OR GO.PAY_KIND=#PayTypePreDiff#  OR GO.PAY_KIND=#PayTypeMemberCardDiff#  OR GO.PAY_KIND=#PayTypeOwe#  OR GO.PAY_KIND=#PreDepositsDiff#  OR GO.PAY_KIND=#AccountPreDepositsDiff# )
			<dynamic>
				<isNotNull prepend="And" property="BeiginDateTimeString">
					OPERATE_DATE_TIME>=#BeiginDateTimeString#
				</isNotNull>
				<isNotNull prepend="And" property="EndDateTimeString">
					<![CDATA[OPERATE_DATE_TIME<=#EndDateTimeString#]]>
				</isNotNull>
				<!--<isNotEqual prepend="And" property="OperateUsersId" compareValue="0">
					OPERATE_USERS_ID = #OperateUsersId#
				</isNotEqual>-->
				<isNotNull prepend="And" property="OperateUsersIdList">
					<iterate open="(" close=")"  conjunction="Or" property="OperateUsersIdList">
						<![CDATA[		OPERATE_USERS_ID = #OperateUsersIdList[]#]]>
					</iterate>
				</isNotNull>
				</dynamic>
				GROUP BY OPERATE_USERS_ID
			) M
			FULL JOIN
			( <!--优惠合计(抹零+折让+优惠+舍入少收)-->
			SELECT OPERATE_USERS_ID,SUM(ISNULL(CONCESSION_AMOUNT,0)) CONCESSIONAMOUNT
			FROM PAYMENT_CONCESSION
			WHERE DELETED='0'
			AND COMPANY_ID=#CompanyId#
			AND BRANCH_SHOP_ID=#BaranchShopId#
			AND (CONCESSION_TYPE=#ConcessionType1# OR CONCESSION_TYPE=#ConcessionType2# OR CONCESSION_TYPE=#ConcessionType3# OR CONCESSION_TYPE=#ConcessionType4#)
			<dynamic>
					<isNotNull prepend="And" property="BeiginDateTimeString">
						OPERATE_DATE_TIME>=#BeiginDateTimeString#
					</isNotNull>
					<isNotNull prepend="And" property="EndDateTimeString">
						<![CDATA[OPERATE_DATE_TIME<=#EndDateTimeString#]]>
					</isNotNull>
					<!--<isNotEqual prepend="And" property="OperateUsersId" compareValue="0">
						OPERATE_USERS_ID = #OperateUsersId#
					</isNotEqual>-->
					<isNotNull prepend="And" property="OperateUsersIdList">
						<iterate open="(" close=")"  conjunction="Or" property="OperateUsersIdList">
							<![CDATA[		OPERATE_USERS_ID = #OperateUsersIdList[]#]]>
						</iterate>
					</isNotNull>
				</dynamic>
				GROUP BY OPERATE_USERS_ID
				) Z ON M.OPERATE_USERS_ID = Z.OPERATE_USERS_ID
				) temp1
				)

				select TOP $RowCount$ * from TEMPTBL WHERE ROW > #CurrentPageIndex# * #RowCount#
			</select>

			<!---按操作人统计优惠信息(统计记录数)-->
			<select id="SelectPayConcessionCountByUserId" parameterClass="map" resultClass="int">
				SELECT
				COUNT(*) FROM
				(	 <!--多收合计(舍入多收)-->
				SELECT
				OPERATE_USERS_ID,SUM(ISNULL(CONCESSION_AMOUNT,0)) MORECONCESSIONAMOUNT
				FROM PAYMENT_CONCESSION PC
				INNER JOIN GATHERING_ORDERS  GO ON  GO.GATHERING_ID = PC.GATHERING_ID
				WHERE DELETED='0'
				AND COMPANY_ID=#CompanyId#
				AND BRANCH_SHOP_ID=#BaranchShopId#
				AND CONCESSION_TYPE=#ConcessionType5#
				AND (GO.PAY_KIND=#PayTypeBalance# OR GO.PAY_KIND=#PayTypePreDiff#  OR GO.PAY_KIND=#PayTypeMemberCardDiff#  OR GO.PAY_KIND=#PayTypeOwe#  OR GO.PAY_KIND=#PreDepositsDiff#  OR GO.PAY_KIND=#AccountPreDepositsDiff# )
				<dynamic>
					<isNotNull prepend="And" property="BeiginDateTimeString">
						OPERATE_DATE_TIME>=#BeiginDateTimeString#
					</isNotNull>
					<isNotNull prepend="And" property="EndDateTimeString">
						<![CDATA[OPERATE_DATE_TIME<=#EndDateTimeString#]]>
					</isNotNull>
					<!--<isNotEqual prepend="And" property="OperateUsersId" compareValue="0">
						OPERATE_USERS_ID = #OperateUsersId#
						</isNotEqual>-->
					<isNotNull prepend="And" property="OperateUsersIdList">
						<iterate open="(" close=")"  conjunction="Or" property="OperateUsersIdList">
							<![CDATA[		OPERATE_USERS_ID = #OperateUsersIdList[]#]]>
						</iterate>
					</isNotNull>
				</dynamic>
				GROUP BY OPERATE_USERS_ID
				) M
				FULL JOIN
				(  <!--优惠合计(抹零+折让+优惠+舍入少收)-->
				SELECT OPERATE_USERS_ID,SUM(ISNULL(CONCESSION_AMOUNT,0)) CONCESSIONAMOUNT
				FROM PAYMENT_CONCESSION
				WHERE DELETED='0'
				AND COMPANY_ID=#CompanyId#
				AND BRANCH_SHOP_ID=#BaranchShopId#
				AND (CONCESSION_TYPE=#ConcessionType1# OR CONCESSION_TYPE=#ConcessionType2# OR CONCESSION_TYPE=#ConcessionType3# OR CONCESSION_TYPE=#ConcessionType4#)
				<dynamic>
					<isNotNull prepend="And" property="BeiginDateTimeString">
						OPERATE_DATE_TIME>=#BeiginDateTimeString#
					</isNotNull>
					<isNotNull prepend="And" property="EndDateTimeString">
						<![CDATA[OPERATE_DATE_TIME<=#EndDateTimeString#]]>
					</isNotNull>
					<!--<isNotEqual prepend="And" property="OperateUsersId" compareValue="0">
						OPERATE_USERS_ID = #OperateUsersId#
					</isNotEqual>-->
					<isNotNull prepend="And" property="OperateUsersIdList">
						<iterate open="(" close=")"  conjunction="Or" property="OperateUsersIdList">
							<![CDATA[		OPERATE_USERS_ID = #OperateUsersIdList[]#]]>
						</iterate>
				</isNotNull>
				</dynamic>
			GROUP BY OPERATE_USERS_ID
			) Z ON M.OPERATE_USERS_ID = Z.OPERATE_USERS_ID
		</select>

		<!--通过操作人获取优惠订单信息-->
		<select id="SelectPayConcessionOrderInfoByOperateUserId" parameterClass="map" resultMap="SelectPayConcessionOrderInfo">
			SELECT * FROM (SELECT COUNT(ORDERS_ID) AS ORDERCOUNT, SUM(SUM_AMOUNT) AS SUMAMOUNTTOTAL,SUM(REAL_PAID_AMOUNT) AS REALAMOUNTTOTAL, OPERATE_USERS_ID FROM
			(
				SELECT * FROM (
				SELECT  TEMP1.ORDERS_ID, O.SUM_AMOUNT,O.REAL_PAID_AMOUNT, OPERATE_USERS_ID FROM (
				SELECT DISTINCT GO.ORDERS_ID , PC.OPERATE_USERS_ID
				FROM GATHERING_ORDERS GO
				INNER JOIN PAYMENT_CONCESSION PC ON PC.GATHERING_ID = GO.GATHERING_ID
			
				<![CDATA[	WHERE PC.CONCESSION_AMOUNT <> 0]]>
					AND COMPANY_ID=#CompanyId#
					AND BRANCH_SHOP_ID=#BaranchShopId# 
					<isNotNull prepend="And" property="BeiginDateTimeString">
						OPERATE_DATE_TIME>=#BeiginDateTimeString#
					</isNotNull>
					<isNotNull prepend="And" property="EndDateTimeString">
						<![CDATA[OPERATE_DATE_TIME<=#EndDateTimeString#]]>
					</isNotNull>
					) TEMP1 INNER JOIN ORDERS O ON O.ID = TEMP1.ORDERS_ID
					) TEMP2
				) TEMP3  GROUP BY OPERATE_USERS_ID
			) TEMP4
			WHERE OPERATE_USERS_ID = #OperateUsersId#
		</select>
	</statements>
</sqlMap>