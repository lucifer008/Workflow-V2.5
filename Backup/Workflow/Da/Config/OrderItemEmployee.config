<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="OrderItemEmployee" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<resultMap id="SelectOldEmployeeResult" class="OrderItemEmployee">
			<result property="Id" column="ID" dbType="bigint"/>
			<result property="Name" column="NAME" dbType="string"/>
			<result property="PositionId" column="POSITION_ID" dbType="bigint"/>
			<result property="PositionName" column="positionname"/>
		</resultMap>
		<resultMap id="SelectOrderItemEmployeeResult" class="OrderItemEmployee">
			<result property="Id" column="ID" dbType="bigint"/>
			<result property="OrderItemId" column ="Order_Item_Id"/>
			<result property="Name" column="NAME" dbType="string"/>
			<result property="PositionId" column="POSITION_ID" dbType="bigint"/>
			<result property="PositionName" column="positionname"/>
			<result property="EmployeeId" column="Id"/>
		</resultMap>
    
    <resultMap id="SearchOrderByCashPersonMap" class="Order">
      <result property="Id" column="Id" dbType="bigint"/>
      <result property="PaidAmount" column="PaidAmount" dbType="decimal"/>
      <result property="AccountReceviableOweMomeyTotal" column="OweMomeyTotal" dbType="decimal"/>
      <result property="No" column="NO" dbType="varchar"/>
      <result property="NotPayTicketAmount" column="NotPayTicketAmount" dbType="decimal"/>
      <result property="CashName" column="Name"/>
      <result property="BalanceDateTime" column="BALANCE_DATE_TIME" dbType="datetime"/>
      <result property="InsertDateTime" column="INSERT_DATE_TIME" dbType="datetime"/>
	  <result property="RealPaidAmount" column="RealPaidAmount"/><!--会员卡冲减-->
    </resultMap>
	</resultMaps>
	<statements>
		<delete id="DeleteOrderItemEmployeeByOrderNo" parameterClass="OrderItemEmployee">
			<!--日期:2010年6月3日16:08:44 操作:Sql语句优化 操作人:张晓林-->
			<!--<![CDATA[
				delete Order_Item_Employee
				from
				Order_Item_Employee
				inner join EMPLOYEE_POSITION ep  on Order_Item_Employee.employee_id=ep.employee_id 
				inner join order_Item as oi on Order_Item_Employee.order_item_id=oi.id
				inner join orders as o on oi.orders_id=o.id
				]]>
			<![CDATA[
				where o.no=#No# and oi.Deleted='0' and oi.Company_Id=#OrderItemId#
			]]>
			<isNotNull property="PositionIdList">
				<iterate prepend="and" property="PositionIdList" open="(" close=")" conjunction="or">
					<![CDATA[ep.Position_Id=#PositionIdList[]#]]>
				</iterate>
			</isNotNull>
			<![CDATA[]]>
			<isNotEqual prepend="and" compareProperty="Id" compareValue="0">
				<![CDATA[
				 oi.branch_shop_id=#Id#
				]]>
			</isNotEqual>-->
			
			<!--优化后的Sql语句-->
			declare @ordersId int
			set @ordersId=(select Id from orders where no=#No# and Deleted='0' and Company_Id=#OrderItemId#
			<isNotEqual prepend="and" compareProperty="Id" compareValue="0">
			<![CDATA[
				 branch_shop_id=#Id#
				]]>
			</isNotEqual>
			)
			select * Into ##teEmployeePosition from(
			select employee_Id from employee_position
			where 1=1
			<isNotNull property="PositionIdList">
				<iterate prepend="and" property="PositionIdList" open="(" close=")" conjunction="or">
					<![CDATA[Position_Id=#PositionIdList[]#]]>
				</iterate>
			</isNotNull>
			)z
			select * Into ##teOrderItem from(
			select Id,orders_Id from order_Item where orders_Id=@ordersId
			)z1

			delete Order_Item_Employee
			from Order_Item_Employee
			inner join  ##teEmployeePosition ep on Order_Item_Employee.employee_id=ep.employee_id
			inner join  ##teOrderItem oi on Order_Item_Employee.order_item_id=oi.id
			drop table ##teEmployeePosition
			drop table ##teOrderItem
			
		</delete>
		<delete id="DispatchDeleteOrderItemEmployeeByOrderNo" parameterClass="OrderItemEmployee">
			<![CDATA[
				delete Order_Item_Employee
				from
				Order_Item_Employee
				inner join order_Item as oi on Order_Item_Employee.order_item_id=oi.id
				inner join orders as o on oi.orders_id=o.id
				inner join employee_position ep on ep.employee_id=Order_item_employee.employee_id
				]]>
			<![CDATA[
				where o.no=#No# and ep.position_id<>#PositionId# and oi.Deleted='0' and oi.Company_Id=#OrderItemId#
			]]>
			<isNotEqual prepend="and" compareProperty="Id" compareValue="0">
				<![CDATA[
				 oi.branch_shop_id=#Id#
				]]>
			</isNotEqual>
		</delete>
		<select id="SelectOldEmployee" parameterClass="OrderItemEmployee" resultMap="SelectOldEmployeeResult">
			<![CDATA[
			select distinct b.id,e.position_id, b.Name,f.name as positionname from order_Item_employee a
			inner join employee b on a.employee_id=b.id
			inner join order_Item c on a.Order_Item_id=c.id
			inner join orders d on c.orders_id=d.id
			inner join employee_position e on b.id=e.employee_id
			inner join position f on e.position_id=f.id
			where (e.position_id=#PositionId# or e.position_id=#PositionId1# or e.position_id=#PositionId2# or e.position_id=#Id#)
				and d.no=#No# and d.Deleted='0' and d.Company_Id=#OrderItemId#
			]]>
			<isNotEqual prepend="and" compareProperty="Id" compareValue="0">
				<![CDATA[
				 d.branch_shop_id=#Id#
				]]>
			</isNotEqual>
		</select>
		<select id="SelectOrderItemEmployee" parameterClass="OrderItemEmployee" resultMap="SelectOrderItemEmployeeResult">
			<!--2010年6月3日14:22:24优化前的Sql-->
			<!--<![CDATA[
			select b.id,a.order_item_id,e.position_id, b.Name,f.name as positionname,a.employee_id  from order_Item_employee a
			inner join employee b on a.employee_id=b.id
			inner join order_Item c on a.Order_Item_id=c.id
			inner join orders d on c.orders_id=d.id
			inner join employee_position e on b.id=e.employee_id
			inner join position f on e.position_id=f.id
			where (e.position_id=#PositionId1# or e.position_id=#PositionId2# or e.position_id=#PositionId#)
				and d.no=#No# and d.Deleted='0' and d.Company_Id=#OrderItemId#
			]]>
			<isNotEqual prepend="and" compareProperty="Id" compareValue="0">
				<![CDATA[
				 d.branch_shop_id=#Id#
				]]>
			</isNotEqual>
			order by c.Id-->
			<!--日期:2010年6月3日14:22:47 操作:优化 操作人:张晓林-->
			if exists(select * from sysobjects where name='##temp1')
			begin
			drop table ##temp1
			end
			select * into ##tem from(
			select b.Id,b.Name,e.position_id,f.name positionName,c.orders_Id,a.order_Item_Id
			from order_Item_employee a
			inner join employee b on a.employee_id=b.id
			inner join order_Item c on a.Order_Item_id=c.id
			inner join employee_position e on b.id=e.employee_id
			inner join position f on e.position_id=f.id
			where c.orders_Id in(select Id from orders where no=#No#)
			)z

			select
			b.Id,b.Name,b.position_id,b.name positionName,b.order_Item_Id
			from orders a
			inner join ##tem b on b.orders_Id=a.Id
			where (b.position_id=#PositionId1#  or b.position_id=#PositionId2#  or b.position_id=#PositionId#)
			and a.no= #No# and a.Deleted='0' and a.Company_Id=#OrderItemId# and a.branch_shop_id=#Id#
			order by b.order_Item_Id
			drop table ##tem
		</select>
		<select id="GetOrderItemEmployeeByOrderNo" parameterClass="string" resultMap="OrderItemEmployeeResultMap.selectResult" >
			<![CDATA[
				select c.* from order_item_employee c 
				inner join order_Item a on c.order_Item_id=a.id
				inner join orders b on a.orders_id=b.id
				where b.no=#orderNo# 
			]]>
		</select>
		
		<select id="GetOrderItemEmployeeByOrderNo2" parameterClass="string" resultMap="SelectOldEmployeeResult" >
			<![CDATA[
					SELECT DISTINCT b.ID, e.POSITION_ID, b.NAME
					FROM  dbo.ORDER_ITEM_EMPLOYEE AS a INNER JOIN
							dbo.EMPLOYEE AS b ON a.EMPLOYEE_ID = b.ID INNER JOIN
							dbo.ORDER_ITEM AS c ON a.ORDER_ITEM_ID = c.ID INNER JOIN
							dbo.ORDERS AS d ON c.ORDERS_ID = d.ID INNER JOIN
							dbo.EMPLOYEE_POSITION AS e ON b.ID = e.EMPLOYEE_ID
					WHERE (d.NO = #orderNo#)
			]]>
		</select>
    
    <!--收银当班查询(分页)-->
    <select id="SearchOrderByCashPerson" parameterClass="Order" resultMap="SearchOrderByCashPersonMap">
		select top(#Status1#) * from(
		select
		e.Id,Sum(isnull(g.amount,0)) as PaidAmount,
		(sum(isnull(e.Sum_amount,0))-Sum(isnull(g.amount,0))-Sum(isnull(g.ConcessionAmount,0))) as OweMomeyTotal,
		e.[No],Sum(isnull(e.PAID_TICKET_AMOUNT,0)) as NotPayTicketAmount,
		e.insert_Date_Time,e.Balance_Date_Time,emm.Name,
		Sum(isNull(g.realPaidAmount,0)) RealPaidAmount
		from Orders as e
		left join Users as b on e.cash_User_Id=b.Id
		left join employee as emm on emm.Id=b.Employee_Id
		left join
		(
			select bb.orders_Id,bb.amount,isnull((isnull(cc.ConcessionAmount,0)-isnull(dd.ConcessionAmount1,0)),0) ConcessionAmount,ff.RealPaidAmount from (
			select orders_Id,Sum(isnull(b.Amount,0)) as amount from Gathering_Orders as a
			left join Gathering as b on a.Gathering_Id=b.Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)<!--付款类型为:结算款+会员卡冲减+预付款冲减-->
			Group by  Orders_Id
			) bb
			left join(
			select f1.orders_Id,isNull(sum(isNull(f2.amount,0)),0) RealPaidAmount from Gathering_Orders f1
			left join gathering f2 on f1.Gathering_Id=f2.Id
			where f2.deleted='0'
			and f1.pay_kind=#OrderWorking#
			group by f1.orders_Id
			)ff on ff.orders_Id=bb.Orders_Id
		<dynamic>
			<!--不包含舍入多收的优惠-->
			left join(
			select aa.Orders_Id,aa.ConcessionAmount from (
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)
			and b.concession_type!=#OrderBlankOut#
			Group by a.Orders_Id
			) aa
			)cc on cc.Orders_Id=bb.Orders_ID
			<!--舍入多收的优惠-->
			left join(
			select ee.orders_Id,ee.ConcessionAmount1 from(
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount1 from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)
			and b.concession_type=#OrderBlankOut#
			Group by a.Orders_Id
			)ee
			)dd on dd.orders_Id=bb.orders_Id
		</dynamic>
		)as g on e.Id=g.orders_ID
		where e.DELETED = '0' And e.Company_Id=#CompanyId#
		<dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          e.Branch_Shop_Id=#BranchShopId#
        </isNotNull>
        <isNotNull prepend="And" property="CashName">
          e.cash_User_Id=#CashName#
        </isNotNull>
        <isNotNull prepend="And" property="Status">
          e.Status=#Status#
        </isNotNull>
        <isNotNull property="EmployeeArray">
          <iterate prepend="and" property="EmployeeArray" open="(" close=")" conjunction=" OR ">
            <![CDATA[emm.ID=#EmployeeArray[]#]]>
          </iterate>
        </isNotNull>
        <isNotNull prepend="And" property="InsertDateTimeString">
          e.Balance_Date_Time>=#InsertDateTimeString#
        </isNotNull>
        <isNotNull prepend="And" property="BalanceDateTimeString">
          <![CDATA[e.Balance_Date_Time<=#BalanceDateTimeString#]]>
        </isNotNull>
      </dynamic>
      group by g.Orders_ID,e.ID,e.No,e.insert_Date_Time,e.Balance_Date_Time,Paid_Amount,emm.Name
      ) L
      where L.Id not in(
      select top(#Status1#*#CurrentPageIndex#)  e.Id
      from Orders as e
      left join Users as b on e.cash_User_Id=b.Id
      left join employee as emm on emm.Id=b.Employee_Id
      where e.DELETED = '0' And e.Company_Id=#CompanyId#
      <dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          e.Branch_Shop_Id=#BranchShopId#
        </isNotNull>
        <isNotNull prepend="And" property="CashName">
          e.cash_User_Id=#CashName#
        </isNotNull>
        <isNotNull prepend="And" property="Status">
            e.Status=#Status#
        </isNotNull>
        <isNotNull property="EmployeeArray">
          <iterate prepend="and" property="EmployeeArray" open="(" close=")" conjunction=" OR ">
            <![CDATA[emm.ID=#EmployeeArray[]#]]>
          </iterate>
        </isNotNull>
        <isNotNull prepend="And" property="InsertDateTimeString">
          e.Balance_Date_Time>=#InsertDateTimeString#
        </isNotNull>
        <isNotNull prepend="And" property="BalanceDateTimeString">
          <![CDATA[e.Balance_Date_Time<=#BalanceDateTimeString#]]>
        </isNotNull>
      </dynamic>
      )
    </select>
    
    <!--当班收银(统计记录数)-->
    <select id="SearchOrderByCashPersonRowCount" parameterClass="Order" resultClass="long">
      select
      count(e.Id)
      from Orders as e
      left join Users as b on e.cash_User_Id=b.Id
      left join employee as emm on emm.Id=b.Employee_Id
      where e.DELETED = '0' And e.Company_Id=#CompanyId#
      <dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          e.Branch_Shop_Id=#BranchShopId#
        </isNotNull>
        <isNotNull prepend="And" property="CashName">
          e.cash_User_Id=#CashName#
        </isNotNull>
        <isNotNull prepend="And" property="Status">
          e.Status=#Status#
        </isNotNull>
        <isNotNull property="EmployeeArray">
          <iterate prepend="and" property="EmployeeArray" open="(" close=")" conjunction=" OR ">
            <![CDATA[emm.ID=#EmployeeArray[]#]]>
          </iterate>
        </isNotNull>
        <isNotNull prepend="And" property="InsertDateTimeString">
          e.Balance_Date_Time>=#InsertDateTimeString#
        </isNotNull>
        <isNotNull prepend="And" property="BalanceDateTimeString">
          <![CDATA[e.Balance_Date_Time<=#BalanceDateTimeString#]]>
        </isNotNull>
      </dynamic>      
    </select>
    
    <!--当班收银(打印)-->
    <select id="SearchOrderByCashPersonPrint" parameterClass="Order" resultMap="SearchOrderByCashPersonMap">
		select * from(
		select
		e.Id,Sum(isnull(g.amount,0)) as PaidAmount,
		(sum(isnull(e.Sum_amount,0))-Sum(isnull(g.amount,0))-Sum(isnull(g.ConcessionAmount,0))) as OweMomeyTotal,
		e.[No],Sum(isnull(e.PAID_TICKET_AMOUNT,0)) as NotPayTicketAmount,emm.Name,
		e.insert_Date_Time,e.Balance_Date_Time,
		Sum(isNull(g.realPaidAmount,0)) RealPaidAmount
		from Orders as e
		left join Users as b on e.cash_User_Id=b.Id
		left join employee as emm on emm.Id=b.Employee_Id
		left join
		(
			select bb.orders_Id,bb.amount,isnull((isnull(cc.ConcessionAmount,0)-isnull(dd.ConcessionAmount1,0)),0) ConcessionAmount,ff.RealPaidAmount from (
			select orders_Id,Sum(isnull(b.Amount,0)) as amount from Gathering_Orders as a
			left join Gathering as b on a.Gathering_Id=b.Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)<!--付款类型为:结算款+会员卡冲减+预付款冲减-->
			Group by  Orders_Id
			) bb
			left join(
			select f1.orders_Id,isNull(sum(isNull(f2.amount,0)),0) RealPaidAmount from Gathering_Orders f1
			left join gathering f2 on f1.Gathering_Id=f2.Id
			where f2.deleted='0'
			and f1.pay_kind=#OrderWorking#
			group by f1.orders_Id
			)ff on ff.orders_Id=bb.Orders_Id
			<dynamic>
		<!--不包含舍入多收的优惠-->
			left join(
			select aa.Orders_Id,aa.ConcessionAmount from (
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)
			and b.concession_type!=#OrderBlankOut#
			Group by a.Orders_Id
			) aa
			)cc on cc.Orders_Id=bb.Orders_ID
			<!--舍入多收的优惠-->
			left join(
			select ee.orders_Id,ee.ConcessionAmount1 from(
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount1 from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.pay_kind=#Status2# or a.pay_kind=#Status3# or a.pay_kind=#OrderWorking# or a.pay_kind=#Address# or a.pay_kind=#OrderFinished#)
			and b.concession_type=#OrderBlankOut#
			Group by a.Orders_Id
			)ee
			)dd on dd.orders_Id=bb.orders_Id
			</dynamic>
		)as g on e.Id=g.orders_ID
		where e.DELETED = '0' And e.Company_Id=#CompanyId#
		<dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          e.Branch_Shop_Id=#BranchShopId#
        </isNotNull>
        <isNotNull prepend="And" property="CashName">
          e.cash_User_Id=#CashName#
        </isNotNull>
        <isNotNull property="EmployeeArray">
          <iterate prepend="and" property="EmployeeArray" open="(" close=")" conjunction=" OR ">
            <![CDATA[emm.ID=#EmployeeArray[]#]]>
          </iterate>
        </isNotNull>
        <isNotNull prepend="And" property="Status">
          e.Status=#Status#
        </isNotNull>
        <isNotNull prepend="And" property="InsertDateTimeString">
          e.Balance_Date_Time>=#InsertDateTimeString#
        </isNotNull>
        <isNotNull prepend="And" property="BalanceDateTimeString">
          <![CDATA[e.Balance_Date_Time<=#BalanceDateTimeString#]]>
        </isNotNull>
      </dynamic>
      group by g.Orders_ID,e.ID,e.No,e.insert_Date_Time,e.Balance_Date_Time,Paid_Amount,emm.Name
      ) L
    </select>
    
    <!--根据订单明细Id和雇员Id获取OrderItemEmployee-->
    <select id="GetEmployeeEmployeeByOrderItemIdOrEmployeeId" resultMap="OrderItemEmployeeResultMap.selectResult">
      select * from ORDER_ITEM_EMPLOYEE where ORDER_ITEM_ID=#OrderItemId# and EMPLOYEE_ID=#EmployeeId#
    </select>

    <!--根据订单明细Id和雇员Id删除OrderItemEmployee-->
    <delete id="DeleteOrderItemEmployee" parameterClass="long">
      delete ORDER_ITEM_EMPLOYEE
      from ORDER_ITEM_EMPLOYEE a
      Inner join order_Item b on a.order_Item_Id=b.Id
      where b.Orders_Id=#orderId#
    </delete>
		
	<!--根据订单号获取该订单下的所有明细雇员-->
	<select id="GetOrderItemEmployeeListByOrderNo" resultMap="OrderItemEmployeeResultMap.selectResult">
		select distinct a.* from order_Item_employee a
		Inner join order_Item b on a.order_Item_Id=b.Id
		Inner join orders c on c.Id=b.orders_Id
		where c.deleted='0'
		and c.company_id=#PositionId#
		and c.Branch_Shop_Id=#PositionName#
		and c.No=#No#
	</select>
	</statements>
</sqlMap>