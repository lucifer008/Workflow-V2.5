<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="GatheringOrder" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<!--日报映射关系-->
		<resultMap id="DailyPaperMap" class="Order">
			<result property="Id" column="Id"/>
			<result property="PaidAmount" column="PaidAmount"/>
			<result property="AccountReceviableOweMomeyTotal" column="OweMomeyTotal"/>
			<result property="No" column="NO"/>
			<result property="NotPayTicketAmount" column="NotPayTicketAmount"/>
			<result property="BalanceDateTime" column="BALANCE_DATE_TIME"/>
			<result property="InsertDateTime" column="INSERT_DATE_TIME"/>
			<result property="RealPaidAmount" column="RealPaidAmount"/><!--会员卡冲减-->
			<result property="CustomerName" column="Customer_Name"/>
		</resultMap>
	</resultMaps>
	<statements>
		<select id="SelectAll" resultMap="GatheringOrderResultMap.selectResult">
			SELECT
				*
			FROM GATHERING_ORDERS
			ORDER BY ID ASC
		</select>
		<select id ="GetHasPrePaidAmount" parameterClass ="long" resultClass ="decimal">

			SELECT     ISNULL(SUM(dbo.GATHERING.AMOUNT), 0) AS HasPrePay
			FROM         dbo.GATHERING_ORDERS INNER JOIN
			dbo.GATHERING ON dbo.GATHERING_ORDERS.GATHERING_ID = dbo.GATHERING.ID
			WHERE     (dbo.GATHERING_ORDERS.PAY_KIND = 1) AND (dbo.GATHERING_ORDERS.ORDERS_ID = #value#)
				 
		</select>
		<select id="GetGatheringOrderByOrderId" parameterClass="long" resultMap="GatheringOrderResultMap.selectResult">
			<![CDATA[
				select * from Gathering_orders where orders_id=#value#
			]]>
			
		</select>
		<!--
			功能: 日报(记录当天订单结算的收费状况)
			作者: 张晓林
			日期:
			描述: 现金=当天结算款(不包含应收款付款，会员卡冲减)
				  记账=订单总金额-收款-其他冲减-优惠
		-->
		<select id="SelectDailyPaper" parameterClass="map" resultMap="DailyPaperMap">			
			<!--统计各工单收款，及优惠金额放入Temp1中-->
			select * into ##temp1 from (
				select bb.orders_Id,bb.amount,isnull((isnull(cc.ConcessionAmount,0)-isnull(dd.ConcessionAmount1,0)),0) ConcessionAmount,ff.RealPaidAmount from (
				select orders_Id,Sum(isnull(b.Amount,0)) as amount from Gathering_Orders as a
				left join Gathering as b on a.Gathering_Id=b.Id
				where b.deleted='0'
				and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#)
				and b.branch_shop_Id=#BranchShopId# and b.company_Id=#CompanyId#
				Group by  Orders_Id
				) bb
				left join(
				select f1.orders_Id,isNull(sum(isNull(f2.amount,0)),0) RealPaidAmount from Gathering_Orders f1
				left join gathering f2 on f1.Gathering_Id=f2.Id
				where f2.deleted='0'
				and f1.pay_kind=#PayTypeMemberCardDiff#
				group by f1.orders_Id
				)ff on ff.orders_Id=bb.Orders_Id
				<dynamic>
					<!--不包含舍入多收的优惠-->
					left join(
					select aa.Orders_Id,aa.ConcessionAmount from (
					select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount from Gathering_Orders as a
					left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
					where b.deleted='0'
					and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#)
					and b.concession_type!=#ConcessionTypeRoundPositiveValue#
					Group by a.Orders_Id
					) aa
					)cc on cc.Orders_Id=bb.Orders_ID
					<!--舍入多收的优惠-->
					left join(
					select ee.orders_Id,ee.ConcessionAmount1 from(
					select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount1 from Gathering_Orders as a
					left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
					where b.deleted='0'
					and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#)
					and b.concession_type=#ConcessionTypeRoundPositiveValue#
					Group by a.Orders_Id
					)ee
					)dd on dd.orders_Id=bb.orders_Id
				</dynamic>
			)z
			
			<!--按条件统计当天所有工单,放入Temp2中-->
			select * into ##temp2 from(
			select
			e.Id,
			Sum(isnull(g.amount,0)) as PaidAmount,isnull(e.Sum_amount,0)-Sum(isnull(g.amount,0))-Sum(isnull(g.ConcessionAmount,0)) as OweMomeyTotal,
			e.[No],max(isnull(e.PAID_TICKET_AMOUNT,0))as NotPayTicketAmount,
			e.insert_Date_Time,e.Balance_Date_Time,Sum(isNull(g.realPaidAmount,0)) RealPaidAmount,e.Customer_Name
			from Orders as e
			left join ##temp1 g on e.Id=g.orders_ID
			where e.DELETED = '0' and e.Company_Id=#CompanyId# and e.Status=#Status#
			<dynamic>
				<isNotNull prepend="And" property="BeginHandOverDateTime">
					e.Balance_Date_Time>=#BeginHandOverDateTime#
				</isNotNull>
				<isNotNull prepend="And" property="EndHandOverDateTime">
					<![CDATA[e.Balance_Date_Time<=#EndHandOverDateTime#]]>
				</isNotNull>
				<isNotNull prepend="And" property="BranchShopId">
					e.branch_shop_id=#BranchShopId#
				</isNotNull>
			</dynamic>
			group by g.Orders_ID,e.ID,e.No,e.insert_Date_Time,e.Balance_Date_Time,Paid_amount,e.Sum_amount,e.Customer_Name

			)z1
			
			<!--分页处-->
			select
			top(#RowCount#) *
			from ##temp2
			where id not in(select top(#RowCount#*#PageCount#) Id from ##temp2 order by id)
			order by id
		</select>
		<select id="SelectDailyPaperRowTotal" parameterClass="map" resultClass="long">
			select
			count(e.Id)
			from Orders as e
			left join
			(
			select bb.orders_Id from (
			select orders_Id from Gathering_Orders as a
			left join Gathering as b on a.Gathering_Id=b.Id
			where b.deleted='0'
			and (a.Pay_Kind=#PayTypeBalance#)
			Group by  Orders_Id
			) bb
			left join (
			select aa.Orders_Id from (
			select a.Orders_Id from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.Pay_Kind=#PayTypeBalance#)
			Group by a.Orders_Id
			) aa
			)cc on cc.Orders_Id=bb.Orders_ID
			)as g on e.Id=g.orders_ID
			where e.DELETED = '0' and e.Company_Id=#CompanyId# and e.Status=#Status#
			<dynamic>
				<isNotNull prepend="And" property="BeginHandOverDateTime">
					e.Balance_Date_Time>=#BeginHandOverDateTime#
				</isNotNull>
				<isNotNull prepend="And" property="EndHandOverDateTime">
					<![CDATA[e.Balance_Date_Time<=#EndHandOverDateTime#]]>
				</isNotNull>
				<isNotNull prepend="And" property="BranchShopId">
					e.branch_shop_id=#BranchShopId#
				</isNotNull>
			</dynamic>
		</select>
		<select id="SelectDailyPaperPrint" parameterClass="map" resultMap="DailyPaperMap">
			<!--创建临时表##temp并向##temp中插入数据-->
			select * into ##temp from (
			select bb.orders_Id,bb.amount,isnull((isnull(cc.ConcessionAmount,0)-isnull(dd.ConcessionAmount1,0)),0) ConcessionAmount,ff.RealPaidAmount from (
			select orders_Id,Sum(isnull(b.Amount,0)) as amount from Gathering_Orders as a
			left join Gathering as b on a.Gathering_Id=b.Id
			where b.deleted='0'
			and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#) <!--付款类型为结算款+会员卡冲减+预付款冲减-->
			Group by  Orders_Id
			) bb
			left join(
			select f1.orders_Id,isNull(sum(isNull(f2.amount,0)),0) RealPaidAmount from Gathering_Orders f1
			left join gathering f2 on f1.Gathering_Id=f2.Id
			where f2.deleted='0'
			and f1.pay_kind=#PayTypeMemberCardDiff#
			group by f1.orders_Id
			)ff on ff.orders_Id=bb.Orders_Id
			<!--不包含舍入多收的优惠-->
			left join(
			select aa.Orders_Id,aa.ConcessionAmount from (
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#)
			and b.concession_type!=#ConcessionTypeRoundPositiveValue#
			Group by a.Orders_Id
			) aa
			)cc on cc.Orders_Id=bb.Orders_ID
			<!--舍入多收的优惠-->
			left join(
			select ee.orders_Id,ee.ConcessionAmount1 from(
			select a.Orders_Id,sum(isnull(b.Concession_Amount,0)) as ConcessionAmount1 from Gathering_Orders as a
			left join PayMent_ConCession as b on b.Gathering_Id=a.gathering_Id
			where b.deleted='0'
			and (a.Pay_Kind=#PayTypeBalance# or a.pay_Kind=#PayTypePreDiff# or a.Pay_Kind=#PayTypeMemberCardDiff# or a.pay_kind=#PreDeposits# or a.pay_kind=#PayTypeOrderDiff#)
			and b.concession_type=#ConcessionTypeRoundPositiveValue#
			Group by a.Orders_Id
			)ee
			)dd on dd.orders_Id=bb.orders_Id
			)z

			select
			e.Id,Sum(isnull(g.amount,0)) as PaidAmount,
			(sum(isnull(e.Sum_amount,0))-Sum(isnull(g.amount,0))-Sum(isnull(g.ConcessionAmount,0))) as OweMomeyTotal,
			e.[No],max(isnull(e.PAID_TICKET_AMOUNT,0))as NotPayTicketAmount,
			e.insert_Date_Time,e.Balance_Date_Time,Sum(isNull(g.realPaidAmount,0)) RealPaidAmount,e.Customer_Name
			from Orders as e
			left join ##temp g on e.Id=g.orders_ID
			where DELETED = '0' and e.Company_Id=#CompanyId# And e.Status=#Status#
			<dynamic>
				<isNotNull prepend="And" property="BeginHandOverDateTime">
					e.Balance_Date_Time>=#BeginHandOverDateTime#
				</isNotNull>
				<isNotNull prepend="And" property="EndHandOverDateTime">
					<![CDATA[e.Balance_Date_Time<=#EndHandOverDateTime#]]>
				</isNotNull>
				<isNotNull prepend="And" property="BranchShopId">
					e.branch_shop_id=#BranchShopId#
				</isNotNull>
			</dynamic>
			group by g.Orders_ID,e.ID,e.No,e.insert_Date_Time,e.Balance_Date_Time,Paid_Amount,e.Customer_Name
			order by e.id
		</select>
		<!--
			功能: 当日税费
			作者: 张晓林
			日期: 
		-->
		<select id="GetDailyScotAmount" resultClass="decimal" parameterClass="map">
			select
			isNull(sum(isNull(a.amount,0)),0)
			from OTHER_GATHERING_AND_REFUNDMENT_RECORD a
			left join users u on u.Id=a.Insert_User
			left join Employee e on e.Id=u.Employee_Id
			where a.deleted='0'
			and a.company_Id=#CompanyId#
			and a.branch_shop_Id=#BranchShopId#
			and a.Insert_Date_Time>=#BeginHandOverDateTime#
			<![CDATA[and a.Insert_Date_Time<=#EndHandOverDateTime#]]>
			and a.pay_kind=#PayKind#
			and pay_Kind!=#InvliDate#
			<dynamic>
				<isNotNull property="HandOverUserId">
					<iterate prepend="and" property="HandOverUserId" open="(" close=")" conjunction=" OR ">
						<![CDATA[
					  e.Id=#HandOverUserId[]#
					  ]]>
					</iterate>
				</isNotNull>
			</dynamic>
		</select>
		
	</statements>
</sqlMap>