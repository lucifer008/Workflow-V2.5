<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="Employee" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
    <cacheModels>
        <cacheModel id="EmployeeCache" implementation="LRU">
            <flushInterval hours="24"/>
            <property name="CacheSize" value="100" />
            <flushOnExecute statement="EmployeeBase.Insert"/>
            <flushOnExecute statement="EmployeeBase.Update"/>
            <flushOnExecute statement="EmployeeBase.LogicDelete"/>
            <flushOnExecute statement="EmployeeBase.Delete"/>
        </cacheModel>
    </cacheModels>
	<resultMaps>
		<resultMap id="selectPartResult" class="Employee">
			<result property="Employeeid" column="employeeid" dbType="bigint"/>
			<result property="Name" column="name" dbType="nvarchar"/>
			<result property="Positionid" column="positionid" dbType="bigint"/>
			<result property="PositionName" column="positionname" dbType="nvarchar"/>
		</resultMap>
		<resultMap id="selectOrderItemResult" class="Employee">
			<result property="Employeeid" column="employeeid" dbType="bigint"/>
			<result property="Name" column="name" dbType="nvarchar"/>
			<result property="Positionid" column="positionid" dbType="bigint"/>
			<result property="PositionName" column="positionname" dbType="nvarchar"/>
		</resultMap>
		<resultMap id ="SelectAllEmployeeMap" class="Employee">
			<result property="Employeeid" column="employeeid" dbType="bigint"/>
			<result property="Positionid" column="position_id" dbType="bigint"/>
			<result property="Name" column="name" dbType="nvarchar"/>
		</resultMap>
		<resultMap id ="GetAllEmMap" class="Employee">
			<result property="Employeeid" column="employeeid" dbType="bigint"/>
			<result property="Name" column="name" dbType="nvarchar"/>
		</resultMap>
		<resultMap id="SearchOrderCountMap" class="Employee">
			<result property="Employeeid" column="employee_id"/>
			<result property="Name" column="employeeName"/>
			<result property="AnaphseNum" column="anaphseNum"/>
			<result property="PhophaseNum" column="phophaseNum"/>
			<result property="Positionid" column="positionId"/>
			<result property="PositionName" column="PositionName"/>
		</resultMap>
	</resultMaps>
	<statements>

	<!--获取所有雇员信息-->
	<select id="SelectAllEmployee" parameterClass="Employee" resultMap="SelectAllEmployeeMap" cacheModel="Employee.EmployeeCache">
		select a.id as employeeid,a.name,b.position_id from employee a
		inner join employee_position b on a.id=b.employee_id
		where a.Deleted='0' and a.Company_Id=#CompanyId#
		<dynamic>
			<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
				<![CDATA[
				 a.branch_shop_id=#BranchShopId#
				]]>
			</isNotEqual>
		</dynamic>
	</select>
	<!--按照雇员Id获取雇员岗位信息-->
	<select id="SelectPartEmployee" parameterClass="Employee" resultMap="selectPartResult" >
		<![CDATA[
		select a.id as employeeid,a.name,c.id as positionid,c.name as positionname from employee a
		inner join employee_Position b on a.id=b.employee_id
		inner join position c on b.position_id=c.id
		where a.Deleted='0' and a.Company_Id=#CompanyId#
		]]>
		<dynamic>
			<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
				<![CDATA[
				 a.branch_shop_id=#BranchShopId#
				]]>
			</isNotEqual>
    <isNotNull prepend="And" property="Name">
      a.Id=#Name#
    </isNotNull>
		</dynamic>			
	</select>
	<select id="SelectCashEmployee" resultMap="selectPartResult" parameterClass="Employee">
		<![CDATA[
		select a.id as employeeid,a.name,c.id as positionid,c.name as positionname from employee a
		inner join employee_Position b on a.id=b.employee_id
		inner join position c on b.position_id=c.id
		where a.Deleted='0' and a.Company_Id=#CompanyId#
		]]>
		<dynamic>
			<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
				<![CDATA[
				 a.branch_shop_id=#BranchShopId#
				]]>
			</isNotEqual>
			
			<isNotEqual prepend="and" compareProperty="Positionid" compareValue="0">
				<![CDATA[
				c.id=#Positionid# 
				]]>	
			</isNotEqual>
		</dynamic>
	</select>
    <!--查询雇员信息-->
    <select id="SearchEmployeeInfo" resultMap="GetAllEmMap" parameterClass="Employee">
      <![CDATA[
      select
      top(#RowCount#) a.id as employeeid,
      a.name
      from employee a
      where a.Deleted='0' and a.Company_Id=#CompanyId#
      ]]>
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[
					 a.branch_shop_id=#BranchShopId#
					]]>
        </isNotEqual>
        <isNotNull prepend="And" property="Name">
          a.Name=#Name#
        </isNotNull>
        <isNotEmpty prepend="And" property="No">
          a.Id in(select Employee_Id from Employee_Position where position_Id in(select id from Position where name=#No#))
        </isNotEmpty>
      </dynamic>
      And a.id not in(
      <![CDATA[
        select 
        top(#CurrentPageIndex#*#RowCount#)
        id  from employee
        where Deleted='0' and Company_Id=#CompanyId#
        ]]>
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[
					   branch_shop_id=#BranchShopId#
					  ]]>
        </isNotEqual>
        <isNotNull prepend="And" property="Name">
          Name=#Name#
        </isNotNull>
        <isNotEmpty prepend="And" property="No">
          a.Id in(select Employee_Id from Employee_Position where position_Id in(select id from Position where name=#No#))
        </isNotEmpty>
      </dynamic>
      order by id
      )
      order by id
    </select>
    <select id="SearchEmployeeInfoRowCount" parameterClass="Employee" resultClass="long">
      select count(*) from(
      select a.id as employeeid,a.name from employee a
      where a.Deleted='0' and a.Company_Id=#CompanyId#
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[
					 a.branch_shop_id=#BranchShopId#
					]]>
        </isNotEqual>
        <isNotNull prepend="And" property="Name">
          a.Name=#Name#
        </isNotNull>
        <isNotEmpty prepend="And" property="No">
          a.Id in(select Employee_Id from Employee_Position where position_Id in(select id from Position where name=#No#))
        </isNotEmpty>
      </dynamic>
      )m
    </select>
    <select id="SearchEmployeePositionInfo" parameterClass="map" resultMap="selectPartResult">
      select
      a.id as employeeid,
      a.name,c.id as positionid,c.name as positionname
      from employee a
      inner join employee_Position b on a.id=b.employee_id
      inner join position c on b.position_id=c.id
      where a.Deleted='0' and a.Company_Id=#CompanyId#
      <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
        <![CDATA[
					 a.branch_shop_id=#BranchShopId#
					]]>
      </isNotEqual>
    </select>
    <update id="DeleteEmployeeInfo" parameterClass="Employee">
      Update Employee set deleted='1' where Id=#Employeeid# And Company_Id=#CompanyId#
      <dynamic>
        <isNotNull prepend="and" property="BranchShopId">
        <![CDATA[
					 branch_shop_id=#BranchShopId#
					]]>
      </isNotNull>
    </dynamic>
    </update>
	<select id="GetEmployeeByOrderItemId" parameterClass="long" resultMap="selectOrderItemResult" >
	  select distinct a.id as employeeid,a.name,c.id as positionid,c.name as positionname from employee a
	  inner join employee_Position b on a.id=b.employee_id
	  inner join position c on b.position_id=c.id
	  inner join order_item_employee d
	  on d.order_item_id=#value#
	  and a.id=d.employee_id order by c.name desc
	</select>
	<select id="GetEmployeeNameByEmployeeId" parameterClass="long" resultClass="string">
		select
		name
		from employee
		where id=#value#
	</select>
    <select id="CheckEmployeeIsNotUse" parameterClass="map" resultClass="long">
      select count(*) from users where
      deleted='0' And Company_Id=#CompanyId#
      And employee_Id=#EmployeeId#
      <dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          Branch_Shop_Id=#BranchShopId#
        </isNotNull>
      </dynamic>
    </select>
    <select id="GetAllEm" parameterClass="map" resultMap="GetAllEmMap">
      select a.id as employeeid,a.name from employee a
      where a.Deleted='0' and a.Company_Id=#CompanyId#
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[
					 a.branch_shop_id=#BranchShopId#
					]]>
        </isNotEqual>
      </dynamic>
    </select>
	<select id="checkEmployeeNameIsExist" resultClass="long">
		select
		count(Id) 
		from Employee
		where deleted='0'
		and company_Id=#CompanyId#
		<dynamic>
			<isNotNull prepend="and" property="BranchShopId">
				branch_shop_Id=#BranchShopId#
			</isNotNull>
			<isNotNull prepend="and" property="Name">
				Name=#Name#
			</isNotNull>
		</dynamic>
	</select>
	<!--按照人员统计开单量-->
	<select id="SearchOrderCount" resultMap="SearchOrderCountMap">
		select top(#RowCount#) employee_Id,positionName,positionId,EmployeeName,phophaseNum,anaphseNum from(
		select employee_Id,positionName,positionId,EmployeeName,sum(phophaseNum) phophaseNum,sum(anaphseNum) anaphseNum from(
			select distinct aa.*,c.employee_id,p.Name PositionName,P.Id positionId,em.Name employeeName from (
				select id,no,round(1.0/count(*),2) phophaseNum,1 anaphseNum from (
				select
				distinct a.id,f.id as positionId,
				a.no,d.Id employeeId
				from orders a
				inner join order_item  b on a.id=b.orders_id
				inner join ORDER_ITEM_EMPLOYEE c on b.id=c.order_item_id
				inner join employee d on c.employee_id=d.id
				inner join EMPLOYEE_POSITION e on d.id=e.employee_id
				inner join POSITION f on e.position_id=f.id
				where d.deleted='0' and a.status=#AnaphseNum#
				<isNotNull prepend="and" property="PositionIdString">
					a.balance_Date_time>=#PositionIdString#
				</isNotNull>
				<isNotNull prepend="and" property="No">
					<![CDATA[a.balance_Date_Time<=#No#]]>
				</isNotNull>
				) a where positionid=#PositionName#
				group by id,no
			) aa
			inner join order_item b on aa.id=b.orders_id
			inner join ORDER_ITEM_EMPLOYEE c on c.order_item_id=b.id
			inner join employee_position ep on ep.employee_Id=c.employee_Id
			Inner join position p on p.Id=ep.position_Id
			inner join employee em on em.Id=ep.employee_Id
			where p.deleted='0'
			and p.company_Id=#CompanyId# and p.Branch_shop_Id=#BranchShopId#
			and p.Id=#PositionName#
			<isNotNull property="ArrayEmployee">
			<iterate prepend="and" property="ArrayEmployee" open="(" close=")" conjunction=" OR ">
				<![CDATA[
					  em.ID=#ArrayEmployee[]#
					  ]]>
			</iterate>
			</isNotNull>
		)aaa
		group by employee_Id,positionName,positionId,EmployeeName
		)z
		where employee_id not in(
		select
		distinct top(#RowCount#*#CurrentPageIndex#) d.Id
		from orders a
		inner join order_item  b on a.id=b.orders_id
		inner join ORDER_ITEM_EMPLOYEE c on b.id=c.order_item_id
		inner join employee d on c.employee_id=d.id
		inner join EMPLOYEE_POSITION e on d.id=e.employee_id
		inner join POSITION f on e.position_id=f.id
		where d.deleted='0' and a.status=#AnaphseNum#
		<isNotNull prepend="and" property="PositionIdString">
				a.balance_Date_time>=#PositionIdString#
		</isNotNull>
		<isNotNull prepend="and" property="No">
			<![CDATA[a.balance_Date_Time<=#No#]]>
		</isNotNull>
		and f.Id=#PositionName#
		and d.company_Id=#CompanyId# and d.Branch_shop_Id=#BranchShopId#
		<!--<isNotNull prepend="and" property="Name">
			d.id=#Name#
		</isNotNull>-->
		<isNotNull property="ArrayEmployee">
			<iterate prepend="and" property="ArrayEmployee" open="(" close=")" conjunction=" OR ">
				<![CDATA[
					  d.ID=#ArrayEmployee[]#
					  ]]>
			</iterate>
		</isNotNull>
		order by d.id
		)
		order by employee_id
	</select>
	<select id="SearchOrderCountRowCount" resultClass="long">
		select count(Id) from(
		select
		distinct d.Id
		from orders a
		inner join order_item  b on a.id=b.orders_id
		inner join ORDER_ITEM_EMPLOYEE c on b.id=c.order_item_id
		inner join employee d on c.employee_id=d.id
		inner join EMPLOYEE_POSITION e on d.id=e.employee_id
		inner join POSITION f on e.position_id=f.id
		where d.deleted='0' and a.status=#AnaphseNum#
		<isNotNull prepend="and" property="PositionIdString">
			a.balance_Date_time>=#PositionIdString#
		</isNotNull>
		<isNotNull prepend="and" property="No">
			<![CDATA[a.balance_Date_Time<=#No#]]>
		</isNotNull>
		and f.Id=#PositionName#
		and d.company_Id=#CompanyId# and d.Branch_shop_Id=#BranchShopId#
		<!--<isNotNull prepend="and" property="Name">
			d.id=#Name#
		</isNotNull>-->
		<isNotNull property="ArrayEmployee">
			<iterate prepend="and" property="ArrayEmployee" open="(" close=")" conjunction=" OR ">
				<![CDATA[
					  d.ID=#ArrayEmployee[]#
					  ]]>
			</iterate>
		</isNotNull>
		)z
	</select>
	<select id="SearchOrderCountPrint" resultMap="SearchOrderCountMap">
		select employee_Id,positionName,positionId,EmployeeName,sum(phophaseNum) phophaseNum,sum(anaphseNum) anaphseNum from(
		select distinct aa.*,c.employee_id,p.Name PositionName,P.Id positionId,em.Name employeeName from (
		select id,no,round(1.0/count(*),2) phophaseNum,1 anaphseNum from (
		select
		distinct a.id,f.id as positionId,
		a.no,d.Id employeeId
		from orders a
		inner join order_item  b on a.id=b.orders_id
		inner join ORDER_ITEM_EMPLOYEE c on b.id=c.order_item_id
		inner join employee d on c.employee_id=d.id
		inner join EMPLOYEE_POSITION e on d.id=e.employee_id
		inner join POSITION f on e.position_id=f.id
		where d.deleted='0' and a.status=#AnaphseNum#
		<isNotNull prepend="and" property="PositionIdString">
			a.balance_Date_time>=#PositionIdString#
		</isNotNull>
		<isNotNull prepend="and" property="No">
			<![CDATA[a.balance_Date_Time<=#No#]]>
		</isNotNull>
		) a where positionid=#PositionName#
		group by id,no
		) aa
		inner join order_item b on aa.id=b.orders_id
		inner join ORDER_ITEM_EMPLOYEE c on c.order_item_id=b.id
		inner join employee_position ep on ep.employee_Id=c.employee_Id
		Inner join position p on p.Id=ep.position_Id
		inner join employee em on em.Id=ep.employee_Id
		where p.deleted='0'
		and p.company_Id=#CompanyId# and p.Branch_shop_Id=#BranchShopId#
		and p.Id=#PositionName#
		<!--<isNotNull prepend="and" property="Name">
			em.Id=#Name#
		</isNotNull>-->
		<isNotNull property="ArrayEmployee">
			<iterate prepend="and" property="ArrayEmployee" open="(" close=")" conjunction=" OR ">
				<![CDATA[
					  em.ID=#ArrayEmployee[]#
					  ]]>
			</iterate>
		</isNotNull>
		)aaa
		group by employee_Id,positionName,positionId,EmployeeName
		order by employee_Id
	</select>
	<select id="SearchPositionByCondition" resultMap="PositionResultMap.selectResult">
		select
		*
		from Position
		where deleted='0' and company_Id=#CompanyId#
		and Branch_shop_Id=#BranchShopId#
		and Id in(#PositionName#,#PositionIdString#)
	</select>
	<select id="SearchEmployeeByPosition" resultMap="EmployeeResultMap.selectResult">
		select
		e.*
		from employee e
		Inner join employee_position ep on ep.employee_id=e.Id
		Inner join position p on ep.position_Id=p.Id
		where e.deleted='0' and e.company_Id=#CompanyId#
		and e.Branch_shop_Id=#BranchShopId#
		and p.Id in(#PositionName#,#PositionIdString#)
	</select>
		<select  id="SearchPositionByEmployeeId" resultMap="PositionResultMap.selectResult">
			select top(1) p.* from position p
			Inner join employee_position ep on ep.position_Id=p.Id
			inner join employee e on e.Id=ep.employee_Id
			where p.deleted='0'
			and p.company_Id=#CompanyId# and p.Branch_shop_Id=#BranchShopId#
			and e.Id=#Id#
		</select>
  </statements>
</sqlMap>