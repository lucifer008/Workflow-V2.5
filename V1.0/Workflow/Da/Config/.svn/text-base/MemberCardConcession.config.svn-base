<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="MemberCardConcession" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<resultMap id="selectResult" class="MemberCardConcession">
			<result property="Id" column="ID" dbType="bigint"/>
			<result property="MemberCardId" column="MEMBER_CARD_ID" dbType="bigint"/>
			<result property="JoinDateTime" column="JOIN_DATE_TIME" dbType="datetime"/>
			<result property="PaperCount" column="PAPER_COUNT" dbType="decimal"/>
			<result property="RestPaperCount" column="REST_PAPER_COUNT" dbType="decimal"/>
			<result property="Concession" column="CONCESSION_ID" select="ConcessionBase.SelectByPk" nullValue="0" lazyLoad="true"/>
			<result property="PriceDifference" column="PRICE_DIFFERENCE" dbType="decimal"/>
		</resultMap>
    <resultMap id="SelectMemberCardConsumeMap" class="Order">
      <result property="MemberCardId" column="Member_Card_Id"/>
      <result property="MemberCardNo" column="membercardno"/>
      <result property="CustomerName" column="CustomerName"/>
      <result property="SumAmount" column="Sum_Amount"/>
      <!--<result property="BalanceDateTime" column="Balance_Date_Time"/>-->
      <result property="Memo" column="Memo"/>
    </resultMap>
    <resultMap id="GetMemberCardConcessionBaseBusniessInfoMap" class="MemberCardConcession">
      <result property="Id" column="Id"/>
      <result property="MemberCardId" column="Member_Card_Id"/>
      <result property="BaseBusniessTypePriceSetId" column="Base_Business_Type_Price_Set_Id"/>
      <result property="ConcessionId" column="Concession_Id"/>
    </resultMap>
	</resultMaps>
	<statements>
		<select id="SelectAll" resultMap="MemberCardConcessionResultMap.selectResult">
			SELECT
			*
			FROM MEMBER_CARD_CONCESSION where DELETED = '0'
			ORDER BY ID ASC
		</select>
    <!--会员消费统计-->
    <select id="SelectMemberCardConsume" parameterClass="Order" resultMap="SelectMemberCardConsumeMap">
      select
      top(#OrderCount#)
      a.member_card_id,b.member_card_no membercardno ,
      Max(c.Name) customername,sum(Sum_Amount) sum_amount,max(a.Memo) Memo
      from orders  a
      inner join member_CARD b on a.member_card_id=b.id
      inner join Customer c on c.Id=b.Customer_Id
      where a.deleted='0' and a.company_id=#CompanyId#
      and a.Status=#Status#
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[a.branch_shop_id=#BranchShopId#]]>
        </isNotEqual>
        <isNotNull prepend="and" property="BalanceDateTimeString">
          <![CDATA[a.Balance_Date_Time>=#BalanceDateTimeString#]]>
        </isNotNull>
        <isNotNull prepend="and" property="InsertDateTimeString">
          <![CDATA[a.Balance_Date_Time<=#InsertDateTimeString#]]>
        </isNotNull>
        <isNotNull prepend="And" property="MemberCardNo">
          b.member_card_no=#MemberCardNo#
        </isNotNull>
      </dynamic>
        and a.Member_Card_id not in(
        select
        top(#OrderCount#*#CurrentPageIndex#)
        a.member_card_id
        from orders  a
        inner join member_CARD b on a.member_card_id=b.id
        where a.deleted='0' and a.company_id=#CompanyId#
        and a.Status=#Status#
        <dynamic>
            <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
              <![CDATA[a.branch_shop_id=#BranchShopId#]]>
            </isNotEqual>
            <isNotNull prepend="and" property="BalanceDateTimeString">
              <![CDATA[a.Balance_Date_Time>=#BalanceDateTimeString#]]>
            </isNotNull>
            <isNotNull prepend="and" property="InsertDateTimeString">
              <![CDATA[a.Balance_Date_Time<=#InsertDateTimeString#]]>
            </isNotNull>
            <isNotNull prepend="And" property="MemberCardNo">
              b.member_card_no=#MemberCardNo#
            </isNotNull>
          </dynamic>
      group by a.member_card_id,b.member_card_no
      order by a.member_Card_Id
      )
      group by a.member_card_id,b.member_card_no
      order by a.member_Card_Id
    </select>
    <select id="GetMemberCardConsumeRowCount" parameterClass="Order" resultClass="long">
      select count(*) from(
      select
      member_card_id,b.member_card_no membercardno ,
      Max(c.Name) customername,sum(Sum_Amount) sum_amount,max(a.Memo) Memo
      from orders  a
      inner join member_CARD b on a.member_card_id=b.id
      inner join Customer c on c.Id=b.Customer_Id
      where a.deleted='0' and a.company_id=#CompanyId#
      and a.Status=#Status#
      <dynamic>
          <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
            <![CDATA[a.branch_shop_id=#BranchShopId#]]>
          </isNotEqual>
          <isNotNull prepend="and" property="BalanceDateTimeString">
            <![CDATA[a.Balance_Date_Time>=#BalanceDateTimeString#
					  ]]>
          </isNotNull>
          <isNotNull prepend="and" property="InsertDateTimeString">
            <![CDATA[
					  a.Balance_Date_Time<=#InsertDateTimeString#
					  ]]>
          </isNotNull>
          <isNotNull prepend="And" property="MemberCardNo">
            b.member_card_no=#MemberCardNo#
          </isNotNull>
        </dynamic>
      group by a.member_card_id,b.member_card_no
      )z
    </select>
    <select id="GetMemberCardConsumePrint" parameterClass="Order" resultMap="SelectMemberCardConsumeMap">
      select
      member_card_id,b.member_card_no membercardno ,
      Max(c.Name) customername,sum(Sum_Amount) sum_amount,max(a.Memo) Memo
      from orders  a
      inner join member_CARD b on a.member_card_id=b.id
      inner join Customer c on c.Id=b.Customer_Id
      where a.deleted='0' and a.company_id=#CompanyId#
      and a.Status=#Status#
      <dynamic>
        <isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
          <![CDATA[a.branch_shop_id=#BranchShopId#]]>
        </isNotEqual>
        <isNotNull prepend="and" property="BalanceDateTimeString">
          <![CDATA[a.Balance_Date_Time>=#BalanceDateTimeString#
					]]>
        </isNotNull>
        <isNotNull prepend="and" property="InsertDateTimeString">
          <![CDATA[a.Balance_Date_Time<=#InsertDateTimeString#
					]]>
        </isNotNull>
        <isNotNull prepend="And" property="MemberCardNo">
          b.member_card_no=#MemberCardNo#
        </isNotNull>
      </dynamic>
      group by a.member_card_id,b.member_card_no
      order by a.member_Card_Id
    </select>
    <select id="SelectMemberCardConcession" parameterClass="MemberCardConcession" resultMap="MemberCardConcession.selectResult">
      <![CDATA[
			select a.*,c.Price_difference from member_card_concession a
			inner join concession b on a.concession_id=b.id
			inner join concession_difference_price c on c.concession_id=b.id
			where a.member_card_id=#MemberCardId# and a.Rest_Paper_Count>0 order by a.Join_Date_Time ASC
			]]>
    </select>
    <select id="SelectChargeRecord" parameterClass="map" resultMap="MemberCardConcessionResultMap.selectResult">
      select  mcc.*
      from member_card as mc inner join member_card_concession as mcc on mc.id = mcc.member_card_id
      WHERE mc.DELETED = '0'
      <dynamic>
        <isNotNull prepend="AND" property="MemberCardNo">
          MC.Member_Card_No = #MemberCardNo#
        </isNotNull>
        <isNotNull prepend="AND" property="BeginDate">
          <![CDATA[
                    mcc.join_date_time between #BeginDate# and  #EndDate#
                    ]]>
        </isNotNull>
      </dynamic>
      order by mc.id asc
    </select>   
    <!--获取会员参加优惠的业务类型类型列表-->
    <select id="GetMemberCardConcessionBaseBusniessInfo" parameterClass="map" resultMap="GetMemberCardConcessionBaseBusniessInfoMap">
      select
      a.Id,a.Member_Card_Id,
      a.Concession_Id,b.Base_Business_Type_Price_Set_Id
      from MEMBER_CARD_CONCESSION a
      Inner join Concession b on a.concession_Id=b.Id
      where b.deleted='0'
      and b.Company_Id=#CompanyId#
      <dynamic>
        <isNotNull prepend="And" property="BranchShopId">
          b.Branch_Shop_Id=#BranchShopId#
        </isNotNull>
        <isNotNull prepend="And" property="MemberCardId">
          a.Member_Card_Id=#MemberCardId#
        </isNotNull>
        <isNotNull prepend="And" property="ConcessionId">
          a.Concession_Id=#ConcessionId#
        </isNotNull>
      </dynamic>
    </select>

    <!--获取匹配的会员参加优惠信息-->
    <select id="GetMemberCardConcession" parameterClass="map" resultMap="MemberCardConcessionResultMap.selectResult">
      select
      a.*
      from Member_Card_Concession a
      Inner join concession b on a.Concession_Id=b.Id
      where b.Deleted='0'
      and b.Company_Id=#CompanyId#
      <isNotNull prepend="And" property="BranchShopId">
        b.Branch_Shop_Id=#BranchShopId#
      </isNotNull>
      <isNotNull prepend="And" property="BaseBusinessTypePriceSetId">
        b.BASE_BUSINESS_TYPE_PRICE_SET_ID=#BaseBusinessTypePriceSetId#
      </isNotNull>
      <isNotNull prepend="And" property="MemberCardId">
        a.Member_Card_Id=#MemberCardId#
      </isNotNull>
    </select>
    
    <update id="UpdateMemberCardId" parameterClass="map">
      UPDATE MEMBER_CARD_CONCESSION
      SET
      MEMBER_CARD_ID = #NewMemberCardId#
      WHERE MEMBER_CARD_ID = #MemberCardId#
    </update>
    <update id="UpdateMemberCardConcessionRestPaperCount" parameterClass="MemberCardConcession">
      <![CDATA[
			update 
      Member_Card_Concession 
      set Rest_Paper_Count=Rest_Paper_Count-#RestPaperCount# 
      where ID=#Id#
			]]>
    </update>
    <update id="MemberCardDiff" parameterClass="MemberCardConcession">
      Update Member_Card_Concession
      set Rest_Paper_Count=Rest_Paper_Count-#Amount#,
      Amount=Amount-#PaperCount#
      where Member_Card_Id=#MemberCardId#
    </update>
  </statements>
</sqlMap>