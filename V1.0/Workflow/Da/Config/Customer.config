<?xml version="1.0" encoding="utf-8"?>
<sqlMap namespace="Customer" xmlns="http://ibatis.apache.org/mapping"  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"  xsi:noNamespaceSchemaLocation="SqlMap.xsd">
	<resultMaps>
		<resultMap id="SelectParticularCustomerResult" class="Customer">
			<result property="Id" column="ID" />
			<result property="Name" column="NAME" />
			<result property="LastLinkMan" column="LAST_LINK_MAN"/>
			<result property="LastTelNo" column="LAST_TEL_NO"/>
			<result property="Address" column="ADDRESS"/>
			<result property="Memo" column="MEMO"/>
		</resultMap>
		<resultMap id="SelectWithoutConsumeCustomer" class="Customer">
			<result property="Id" column="ID" />
			<result property="Name" column="NAME" />
			<result property="LastLinkMan" column="Last_Link_Man"/>
			<result property="LastTelNo" column="Last_Tel_No"/>
			<result property="InsertDateTime" column="InsertDateTime"/>
			<result property="Memo" column="MEMO"/>
		</resultMap>
	</resultMaps>
	<statements>
    
    <!--客户一览/客户查询(分页)--> 
    <select id="SearchCustomer" parameterClass="map" resultMap="CustomerResultMap.selectResult">
		 Select
		 top (#RowCount#) c.*
		 FROM CUSTOMER As c with(nolock)
		 WHERE c.DELETED = '0'
		 and c.Company_Id=#CompanyId#
		 <isNotNull prepend="And" property="IsNotDisplay">
			c.id>2
		 </isNotNull>
		 <isNotNull prepend="And" property="MemberCardNo">
			c.Id=(select Customer_Id from Member_Card where Member_Card_No=#MemberCardNo#)
		 </isNotNull>
		 and c.id not in(
		  select
		  top (#RowCount#*#PagerCount#) cu.id
		  from customer as cu
		  where cu.Company_id=#CompanyId#
		  and cu.Deleted='0'
		  <isNotNull prepend="And" property="IsNotDisplay">
			cu.id>2
		  </isNotNull>
		  <isNotNull prepend="And" property="MemberCardNo">
			cu.Id=(select Customer_Id from Member_Card where Member_Card_No=#MemberCardNo#)
		  </isNotNull>
		  <dynamic>
			<isNotNull prepend="AND" property="Name">
			  cu.Name like #Name#
			</isNotNull>
			<isNotNull prepend="AND" property="CustomerTypeId">
			  cu.CUSTOMER_TYPE_ID = #CustomerTypeId#
			</isNotNull>
			<isNotNull prepend="AND" property="CustomerLevelId">
			  cu.CUSTOMER_LEVEL_ID = #CustomerLevelId#
			</isNotNull>
			<isNotNull prepend="AND" property="SecondaryTradeId">
			  cu.SECONDARY_TRADE_ID = #SecondaryTradeId#
			</isNotNull>
			<isNotNull prepend="AND" property="LinkMan">
			  cu.Id in(select Customer_Id from Link_Man where NAME like #LinkMan#)
			</isNotNull>
			<isNotNull prepend="AND" property="BeginDate">
			  <![CDATA[
			cu.INSERT_DATE_TIME >=  #BeginDate#
			]]>
			</isNotNull>
			<isNotNull prepend="AND" property="EndDate">
			  <![CDATA[
			cu.INSERT_DATE_TIME < #EndDate#
			]]>
			</isNotNull>
			<isNotEqual prepend="and"  compareProperty="BranchShopId" compareValue="0">
			  <![CDATA[
					cu.Branch_shop_id=#BranchShopId#
					]]>
			</isNotEqual>
		  </dynamic>
		  order by cu.id
        )
		<dynamic>
		<isNotNull prepend="AND" property="Name">
			C.Name like #Name#
		</isNotNull>
		<isNotNull prepend="AND" property="CustomerTypeId">
			C.CUSTOMER_TYPE_ID = #CustomerTypeId#
		</isNotNull>
		<isNotNull prepend="AND" property="CustomerLevelId">
			C.CUSTOMER_LEVEL_ID = #CustomerLevelId#
		</isNotNull>
		<isNotNull prepend="AND" property="SecondaryTradeId">
			C.SECONDARY_TRADE_ID = #SecondaryTradeId#
		</isNotNull>
        <isNotNull prepend="AND" property="LinkMan">
          C.Id in(select Customer_Id from Link_Man where NAME like #LinkMan#)
        </isNotNull>
        <isNotNull prepend="AND" property="BeginDate">
            <![CDATA[
            C.INSERT_DATE_TIME >=  #BeginDate#
            ]]>
        </isNotNull>
        <isNotNull prepend="AND" property="EndDate">
            <![CDATA[
            C.INSERT_DATE_TIME < #EndDate#
            ]]>
        </isNotNull>
		<isNotEqual prepend="and"  compareProperty="BranchShopId" compareValue="0">
			<![CDATA[
			c.Branch_shop_id=#BranchShopId#
			]]>
		</isNotEqual>
       </dynamic>
			order by c.id
		</select>
    <!--统计客户信息记录数-->
    <select id="GetCustomerCount" parameterClass="map" resultClass="long">
      select count(*) from (
      Select DISTINCT  C.*
      FROM CUSTOMER As C with(nolock)
      WHERE C.DELETED = '0' and c.Company_Id=#CompanyId#
      <isNotNull prepend="And" property="IsNotDisplay">
		c.id>2
      </isNotNull>
	  <isNotNull prepend="And" property="MemberCardNo">
		c.Id=(select Customer_Id from Member_Card where Member_Card_No=#MemberCardNo#)
	  </isNotNull>
      <dynamic>
        <isNotNull prepend="AND" property="Name">
          C.Name like #Name#
        </isNotNull>
        <isNotNull prepend="AND" property="CustomerTypeId">
          C.CUSTOMER_TYPE_ID = #CustomerTypeId#
        </isNotNull>
        <isNotNull prepend="AND" property="CustomerLevelId">
          C.CUSTOMER_LEVEL_ID = #CustomerLevelId#
        </isNotNull>
        <isNotNull prepend="AND" property="SecondaryTradeId">
          C.SECONDARY_TRADE_ID = #SecondaryTradeId#
        </isNotNull>
        <isNotNull prepend="AND" property="LinkMan">
         c.Id in( select Customer_Id from Link_Man as l where l.NAME like #LinkMan#)
        </isNotNull>
        <isNotNull prepend="AND" property="BeginDate">
          <![CDATA[ C.INSERT_DATE_TIME >=  #BeginDate#]]>
        </isNotNull>
        <isNotNull prepend="AND" property="EndDate">
          <![CDATA[C.INSERT_DATE_TIME < #EndDate#]]>
        </isNotNull>
        <isNotEqual prepend="and"  compareProperty="BranchShopId" compareValue="0">
          <![CDATA[c.Branch_shop_id=#BranchShopId#]]>
        </isNotEqual>
      </dynamic>
      )  a
    </select>
	<select id="SearchCustomerList" parameterClass="map" resultMap ="CustomerResultMap.selectResult">
		Select 
		DISTINCT C.*
		FROM CUSTOMER As C
		<isNotNull property="NeedLinkMan">
			INNER JOIN LINK_MAN AS LM ON LM.CUSTOMER_ID = C.ID
		</isNotNull>
		WHERE C.DELETED = '0'
		<dynamic>
			<isNotNull prepend="AND" property="Name">
				C.Name like #Name#
			</isNotNull>
			<isNotNull prepend="AND" property="LinkMan">
				LM.NAME = #LinkMan#
			</isNotNull>
		</dynamic>
	</select>
	<delete id="DeleteLinkMan" parameterClass="long">
		DELETE FROM LINK_MAN WHERE CUSTOMER_ID = #Id#
	</delete>    
    <!--查询未确认的客户(分页)-->
    <select id="SelectAllNotValidate" resultMap="CustomerResultMap.selectResult" parameterClass="map">
      SELECT 
	  top(#RowCount#) *
      FROM CUSTOMER as c
      Where c.DELETED = '0'
      And c.Company_Id=#CompanyId#
      And c.Branch_shop_Id=#BranchShopId#
      AND c.VALIDATE_STATUS = '0'
      And c.Id>2
      And c.Id not in(
      SELECT top(#RowCount#*#PageCount#) cu.id
      FROM CUSTOMER as cu
      Where cu.DELETED = '0'
      And cu.Company_Id=#CompanyId#
      And cu.Branch_shop_Id=#BranchShopId#
      AND cu.VALIDATE_STATUS = '0'
      And cu.Id>2
      order by cu.id
      )
      ORDER BY ID
    </select>
    <select id="SelectAllNotValidateRowCount" resultClass="long"  parameterClass="map">
      SELECT count(*)
      FROM CUSTOMER as c
      Where c.DELETED = '0'
      And c.Company_Id=#CompanyId#
      And c.Branch_shop_Id=#BranchShopId#
      AND c.VALIDATE_STATUS = '0'
      And c.Id>2
    </select>  
	<update id="UpdateValidateStatus" parameterClass="map">
		UPDATE CUSTOMER
		SET
		VALIDATE_STATUS = #ValidateStatus#
		WHERE ID = #Id#
	</update>
	<select id="SelectWithoutConsumeCustomer" parameterClass="map" resultMap="SelectWithoutConsumeCustomer">
		<![CDATA[
		select distinct a.id,a.name,a.last_link_man,a.last_tel_No,InsertDateTime,a.Memo from 
		(
		select a.*,isnull(b.ordercount,0) ordercount,insertdatetime from customer a
		left join (select customer_id,count(*) orderCount,max(insert_date_Time) insertdatetime from orders where 1=1 
		]]>
		<dynamic>
			<isNotNull prepend="and" property="BeginTime">
				<![CDATA[
				balance_Date_Time>=#BeginTime#
				]]>
			</isNotNull>
			<isNotNull prepend="and" property="EndTime">
				<![CDATA[
				balance_Date_Time<=#EndTime#
				]]>
			</isNotNull>
		</dynamic>
		<![CDATA[
		group by customer_id) b on a.id=b.customer_id
		) a 
		left join customer_level b on a.Customer_level_id=b.id
		left join customer_type c on a.customer_type_id=c.id
		left join member_card d on a.id=d.customer_id
		left join member_card_Level e on d.member_card_level_id=e.id
		where a.deleted='0' and a.company_id=#CompanyId# and a.ordercount<1
		]]>
		<dynamic>
			<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
				<![CDATA[
				a.branch_shop_id=#BranchShopId#
				]]>
			</isNotEqual>
			<isNotNull  prepend="and" property="CustomerLevel">
				<![CDATA[
				b.id=#CustomerLevel#
				]]>
			</isNotNull>
			<isNotNull prepend="and" property="CustomerType" >
				<![CDATA[
					c.id=#CustomerType#
					]]>
			</isNotNull>
			<isNotNull prepend="and" property="MemberCardLevel">
				<![CDATA[
				d.id=#MemberCardLevel#
				]]>
			</isNotNull>
		</dynamic>
	</select>
	<update id="UpdateCustomerLinkManInfo" parameterClass="Customer">
		<![CDATA[
		Update Customer set LAST_LINK_MAN=#LastLinkMan#,LAST_TEL_NO=#LastTelNo#,
		LINK_MAN_COUNT=isnull(LINK_MAN_COUNT,0)+#LinkManCount# 
		where deleted='0' and company_id=#Company_Id# id=#Id#
		]]>
		<dynamic>
			<isNotEqual prepend="and" compareProperty="BranchShopId" compareValue="0">
				<![CDATA[
				Branch_Shop_Id=#BranchShopId#
				]]>
			</isNotEqual>
		</dynamic>
	</update>
    <!--查询客户消费历史(分页)-->
    <select id="SelectoOrderByCustomerId" parameterClass="map" resultMap="OrderResultMap.selectResult">
      SELECT
      top(#RowCount#) *
      FROM ORDERS as o
      Where o.DELETED = '0'
      AND o.CUSTOMER_ID = #CustomerId#
      And o.Company_Id=#CompanyId#
      And o.Branch_Shop_Id=#BranchShopId#
      And o.Id not in
      (
        select top(#RowCount#*#PageCount#) a.Id from Orders as a
        Where a.DELETED = '0'
        AND a.CUSTOMER_ID = #CustomerId#
        And a.Company_Id=#CompanyId#
        And a.Branch_Shop_Id=#BranchShopId#
        ORDER BY a.NO
      )
      ORDER BY NO
    </select>
    <select id="SelectoOrderRowCountByCustomerId" parameterClass="map" resultClass="long">
      SELECT
      count(*)
      FROM ORDERS as o
      Where o.DELETED = '0'
      AND o.CUSTOMER_ID = #CustomerId#
      And o.Company_Id=#CompanyId#
      And o.Branch_Shop_Id=#BranchShopId#
    </select>
    <!--根据客户名称获取客户Id-->
    <select id="GetCustomerIdByCustomerName" parameterClass="Customer" resultMap="CustomerResultMap.selectResult">
      Select * from Customer
      where Name=#Name#
      And Deleted='0'
      And Company_Id=#CompanyId#
      And Branch_Shop_Id=#BranchShopId#
    </select>
    <select id="GetCustomerPayTypeByCustomerId" resultClass="long">
      select pay_type
      from customer
      where deleted='0'
      and branch_shop_Id=#BranchShopId#
      and company_Id=#CompanyId#
      and Id=#Id#
    </select>
	<update id="SavePreDeposit">
		update customer set amount=amount+#Amount# where Id=#Id#
	</update>
	<update id="DiffPreDeposits">
		update customer set amount=amount-#Amount# where Id=#Id#
	</update>
</statements>
</sqlMap>